<?php

/**
 * Implements hook_rules_action_info().
 */
function wechat_qr2_extend_rules_action_info() {
  return array(
    'wechat_qr2_extend_invoke_qr_scan_event' => array(
      'group' => t('微信'),
      'access callback' => user_access('administer permissions'),
      'label' => t('微信二维码扩展--触发二维码扫描事件'),
      'base' => 'wechat_qr2_extend_invoke_qr_scan_event',
      'parameter' => array(
        'wechat_request' => array(
          'type' => 'wechat_request',
          'label' => t('请求对象'),
          'save' => TRUE,
        ),
      ),
    )
  );
}

function wechat_qr2_extend_invoke_qr_scan_event(WechatRequest $wechatRequest) {
  if ($wechatRequest->msg_type == 'event') {
    $w = $wechatRequest->wrapper();
    $event = $w->field_event->value();
    $key = $w->field_event_key->value();

    switch ($event) {
      case 'SCAN': {
        break;
      }
      case 'subscribe': {
        if (!empty($key)) {
          $key = substr($key, 8);
        }
        break;
      }
    }

    $openid = $wechatRequest->openid;
    $wechat_qr2 = wechat_qr2_load_multiple(FALSE, array('qr_key' => $key));
    $wechat_qr2 = reset($wechat_qr2);
    if (!empty($wechat_qr2) && $wechat_qr2 instanceof WechatQr2) {
      $wechat_request = $wechatRequest;
      rules_invoke_event('wechat_qr2_extend_qr_scan_event', (string) $openid, (string) $event, (string) $key, $wechat_request, $wechat_qr2);
    }
  }
}

/**
 * Implements hook_rules_event_info().
 */
function wechat_qr2_extend_rules_event_info() {
  return array(
    'wechat_qr2_extend_qr_scan_event' => array(
      'label' => t('微信二维码扫描事件'),
      'group' => t('微信'),
      'variables' => array(
        'openid' => array(
          'type' => 'text',
          'label' => t('OpenId'),
        ),
        'event' => array(
          'type' => 'text',
          'label' => t('事件'),
        ),
        'event_key' => array(
          'type' => 'text',
          'label' => t('事件KEY'),
        ),
        'wechat_request' => array(
          'type' => 'wechat_request',
          'label' => t('请求对象'),
        ),
        'wechat_qr2' => array(
          'type' => 'wechat_qr2',
          'label' => t('二维码对象'),
        ),
      ),
    ),
  );
}