<?php

class JsApiPay {
  /**
   *
   * 网页授权接口微信服务器返回的数据，返回样例如下
   * {
   *  "access_token":"ACCESS_TOKEN",
   *  "expires_in":7200,
   *  "refresh_token":"REFRESH_TOKEN",
   *  "openid":"OPENID",
   *  "scope":"SCOPE",
   *  "unionid": "o6_bmasdasdsad6_2sgVt7hMZOPfL"
   * }
   * 其中access_token可用于获取共享收货地址
   * openid是微信支付jsapi支付接口必须的参数
   * @var array
   */
  public $data = NULL;

  public $values = array();

  public function  Set_redirect_uri($value) {
    $this->values['redirect_uri'] = $value;
  }

  /**
   *
   * 通过跳转获取用户的openid，跳转流程如下：
   * 1、设置自己需要调回的url及其其他参数，跳转到微信服务器https://open.weixin.qq.com/connect/oauth2/authorize
   * 2、微信服务处理完成之后会跳转回用户redirect_uri地址，此时会带上一些参数，如：code
   *
   * @return 用户的openid
   */
  public function GetOpenid() {
    //通过code获得openid
    if (!isset($_GET['code'])) {
      //触发微信返回code码
      $baseUrl = urlencode('http://' . $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF'] . $_SERVER['QUERY_STRING']);
      $url = $this->__CreateOauthUrlForCode($baseUrl);
      Header("Location: $url");
      exit();
    }
    else {
      //获取code码，以获取openid
      $code = $_GET['code'];
      $openid = $this->getOpenidFromMp($code);
      return $openid;
    }
  }

  /**
   *
   * 通过code从工作平台获取openid机器access_token
   * @param string $code 微信跳转回来带上的code
   *
   * @return openid
   */
  public function GetOpenidFromMp($code) {
    $url = $this->__CreateOauthUrlForOpenid($code);
    //初始化curl
    $ch = curl_init();
    //设置超时
    define('CURLOP_TIMEOUT', 30);
    curl_setopt($ch, CURLOP_TIMEOUT, 30);
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
    curl_setopt($ch, CURLOPT_HEADER, FALSE);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    //运行curl，结果以jason形式返回
    $res = curl_exec($ch);
    curl_close($ch);
    //取出openid
    $data = json_decode($res, TRUE);
    $this->data = $data;
    $openid = $data['openid'];
    watchdog('open', json_encode($data));
    return $openid;
  }

  /**
   *
   * 拼接签名字符串
   * @param array $urlObj
   *
   * @return 返回已经拼接好的字符串
   */
  private function ToUrlParams($urlObj) {
    $buff = "";
    foreach ($urlObj as $k => $v) {
      if ($k != "sign") {
        $buff .= $k . "=" . $v . "&";
      }
    }

    $buff = trim($buff, "&");
    return $buff;
  }

  public function  getAddressParameter() {
    $getData = $this->data;
    $data = array();
    $data["appid"] = variable_get('wechat_api_appid', '');
    $data["url"] = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
    $time = time();
    $data["timestamp"] = "$time";
    $data["noncestr"] = drupal_random_key(10);
    $data["accesstoken"] = $getData["access_token"];
    ksort($data);
    $params = $this->ToUrlParams($data);
    $addrSign = sha1($params);

    $afterData = array(
      "addrSign" => $addrSign,
      "signType" => "sha1",
      "scope" => "jsapi_address",
      "appId" => variable_get('wechat_api_appid', ''),
      "timeStamp" => $data["timestamp"],
      "nonceStr" => $data["noncestr"]
    );
    $parameters = $afterData;
    return $parameters;
  }

  /**
   *
   * 获取地址js参数
   *
   * @return 获取共享收货地址js函数需要的参数，json格式可以直接做参数使用
   */
  public function GetEditAddressParameters() {
    $getData = $this->data;
    $data = array();
    $data["appid"] = variable_get('wechat_api_appid', '');
    $data["url"] = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
    $time = time();
    $data["timestamp"] = "$time";
    $data["noncestr"] = drupal_random_key(10);
    $data["accesstoken"] = $getData["access_token"];
//    var_dump($getData);
    ksort($data);
    $params = $this->ToUrlParams($data);
    $addrSign = sha1($params);

    $afterData = array(
      "addrSign" => $addrSign,
      "signType" => "sha1",
      "scope" => "jsapi_address",
      "appId" => variable_get('wechat_api_appid', ''),
      "timeStamp" => $data["timestamp"],
      "nonceStr" => $data["noncestr"]
    );
    $parameters = $afterData;
    return $parameters;
  }

  /**
   *
   * 构造获取code的url连接
   * @param string $redirectUrl 微信服务器回跳的url，需要url编码
   *
   * @return 返回构造好的url
   */
  private function __CreateOauthUrlForCode($redirectUrl) {
    $urlObj["appid"] = variable_get('wechat_api_appid', '');//WxPayConfig::$SUB_APPID;
    $urlObj["redirect_uri"] = $this->values['redirect_uri'];
    //'http://jsapi.weixin-pay.dev.sosyuki.com/wx-pay/jsapi/6';
    //	$urlObj["redirect_uri"] = "$redirectUrl";
    $urlObj["response_type"] = "code";
    $urlObj["scope"] = "snsapi_base";
    $urlObj["state"] = "STATE" . "#wechat_redirect";
    $bizString = $this->ToUrlParams($urlObj);
    return "https://open.weixin.qq.com/connect/oauth2/authorize?" . $bizString;
  }

  /**
   *
   * 构造获取open和access_toke的url地址
   * @param string $code ，微信跳转带回的code
   *
   * @return 请求的url
   */
  private function __CreateOauthUrlForOpenid($code) {
    $urlObj["appid"] = variable_get('wechat_api_appid', '');
    $urlObj["secret"] = variable_get('wechat_api_appsecret', '');
    $urlObj["code"] = $code;
    $urlObj["grant_type"] = "authorization_code";
    $bizString = $this->ToUrlParams($urlObj);
    return "https://api.weixin.qq.com/sns/oauth2/access_token?" . $bizString;
  }
}

class JSSDK {
  private $appId;
  private $appSecret;

  public function __construct($appId = NULL, $appSecret = NULL) {
    $this->appId = isset($appId) ? $appId : variable_get('wechat_api_appid', '');
    $this->appSecret = isset($appSecret) ? $appSecret : variable_get('wechat_api_appsecret', '');
  }

  public function getSignPackage() {
    $jsapiTicket = $this->getJsApiTicket();

    // 注意 URL 一定要动态获取，不能 hardcode.
    $protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' || $_SERVER['SERVER_PORT'] == 443) ? "https://" : "http://";
    $url = "$protocol$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";

    $timestamp = time();
    $nonceStr = $this->createNonceStr();

    // 这里参数的顺序要按照 key 值 ASCII 码升序排序
    $string = "jsapi_ticket=$jsapiTicket&noncestr=$nonceStr&timestamp=$timestamp&url=$url";
dpm($url);
    $signature = sha1($string);

    $signPackage = array(
      "appId" => $this->appId,
      "nonceStr" => $nonceStr,
      "timestamp" => $timestamp,
      "url" => $url,
      "signature" => $signature,
      "rawString" => $string
    );
    return $signPackage;
  }

  private function createNonceStr($length = 16) {
    $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    $str = "";
    for ($i = 0; $i < $length; $i++) {
      $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1);
    }
    return $str;
  }

  private function getJsApiTicket() {

    $data = json_decode(variable_get('jssdk_jsapi_ticket', '{"expire_time":0}'));

    if ($data->expire_time < time()) {
      $accessToken = $this->getAccessToken();
      // 如果是企业号用以下 URL 获取 ticket
      // $url = "https://qyapi.weixin.qq.com/cgi-bin/get_jsapi_ticket?access_token=$accessToken";
      $url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?type=jsapi&access_token=$accessToken";
      $res = json_decode($this->httpGet($url));
      $ticket = $res->ticket;

      if ($ticket) {
        $data->expire_time = time() + 7000;
        $data->jsapi_ticket = $ticket;
        variable_set('jssdk_jsapi_ticket', json_encode($data));
      }
    }
    else {
      $ticket = $data->jsapi_ticket;
    }

    return $ticket;
  }

  private function ToUrlParams($urlObj) {
    $buff = "";
    foreach ($urlObj as $k => $v) {
      if ($k != "sign") {
        $buff .= $k . "=" . $v . "&";
      }
    }
    $buff = trim($buff, "&");
    return $buff;
  }

  /**
   *
   * 获取地址js参数
   *
   * @return 获取共享收货地址 js 函数需要的参数，json格式可以直接做参数使用
   */
  public function GetEditAddressParameters() {

    $data = array();

    $data["appid"] = variable_get('wechat_api_appid', '');
    $data["url"] = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
    $time = time();
    $data["timestamp"] = "$time";
    $data["noncestr"] = drupal_random_key(10);
    $data["accesstoken"] = variable_get('wechat_api_access_token', '');

    ksort($data);
    $params = $this->ToUrlParams($data);
    $addrSign = sha1($params);

    $afterData = array(
      "addrSign" => $addrSign,
      "appId" => $data["appid"],
      "timeStamp" => $data["timestamp"],
      "nonceStr" => $data["noncestr"]
    );
    $parameters = $afterData;
    return $parameters;
  }

  private function getAccessToken() {
    $wechat_obj = wechat_api_init_wechatobj();
    $access_token = $wechat_obj->get_access_token();
    return $access_token;
  }

  private function httpGet($url) {
    $curl = curl_init();
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($curl, CURLOPT_TIMEOUT, 500);
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);
    curl_setopt($curl, CURLOPT_URL, $url);

    $res = curl_exec($curl);
    curl_close($curl);

    return $res;
  }
}

function wechat_jssdk_get_settings() {
  $JSSDK = new JSSDK();
  $getSignPackage = $JSSDK->getSignPackage();

  $settings = array(
    'appId' => $getSignPackage['appId'],
    'timestamp' => $getSignPackage['timestamp'],
    'nonceStr' => $getSignPackage['nonceStr'],
    'signature' => $getSignPackage['signature'],
//    'editAddress' => $JSSDK->GetEditAddressParameters(),
  );
  return $settings;
}