<?php


/**
 * Implements hook_schema().
 */
function wechat_scan_schema() {
  $schema['wechat_scan_product'] = array(
    'description' => '微信扫一扫产品.',
    'fields' => array(
      //管理
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => '主键，自增长',
      ),
      'vid' => array(
        'description' => '历史id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => '作者',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => '创建时间.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => '变更时间.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'log' => array(
        'description' => '商品变更记录。',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'data' => array(
        'description' => '全部的商品数据序列化后的存储.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
      ),
      //发送
      'title' => array(
        'description' => '商品名称，建议不超过15个字，超过部分在客户端上以省略号显示。',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'keystandard' => array(
        'description' => '商品编码标准，只支持 ean13 和 qrcode 两种标准。',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'keystr' => array(
        'description' => '商品编码内容。 标准是 eaneanean13 ，则直接填写商品条码，如 “6901939621608” “6901939621608” “6901939621608” 。 标准是 qrcode，二维码的内容可由二维码的内容可由商户自定义，建议使自定义，建议使用商品条码，≤ 20 个字符，由 大小 字母 、数字 、下划线和连字符组成。 注意 ：编码标准是ean13时，编码内容必须在商户的号段之下 ，否则会报错。',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      //返回
      'pid' => array(
        'description' => '创建成功，微信返回的PID。转译后的商品 id ，将直接编入 “获取商品二维码接口 ”返回的二维码内容 。',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'wechat_scan_product_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'wechat_scan_product_revision' => array(
        'table' => 'wechat_scan_product_revision',
        'columns' => array('vid' => 'vid'),
      ),
    ),
  );
  $schema['wechat_scan_product_revision'] = array(
    'description' => '微信扫一扫产品版本.',
    'fields' => array(
      //管理
      'id' => array(
        'description' => 'id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => '版本id.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => '作者',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => '创建时间.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => '变更时间.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'log' => array(
        'description' => '商品变更记录。',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'data' => array(
        'description' => '全部的商品数据序列化后的存储.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
      ),
      //发送
      'title' => array(
        'description' => '商品名称，建议不超过15个字，超过部分在客户端上以省略号显示。',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'keystandard' => array(
        'description' => '商品编码标准，只支持 ean13 和 qrcode 两种标准。',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'keystr' => array(
        'description' => '商品编码内容。 标准是 eaneanean13 ，则直接填写商品条码，如 “6901939621608” “6901939621608” “6901939621608” 。 标准是 qrcode，二维码的内容可由二维码的内容可由商户自定义，建议使自定义，建议使用商品条码，≤ 20 个字符，由 大小 字母 、数字 、下划线和连字符组成。 注意 ：编码标准是ean13时，编码内容必须在商户的号段之下 ，否则会报错。',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      //返回
      'pid' => array(
        'description' => '创建成功，微信返回的PID。转译后的商品 id ，将直接编入 “获取商品二维码接口 ”返回的二维码内容 。',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),

    ),
    'primary key' => array('vid'),
    'foreign keys' => array(
      'wechat_scan_product' => array(
        'table' => 'wechat_scan_product',
        'columns' => array('id' => 'id'),
      ),
    ),
  );
  $schema['wechat_scan_product_qrcode'] = array(
    'description' => '微信扫一扫产品二维码.',
    'fields' => array(
      //管理值
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => '主键，自增长',
      ),
      'uid' => array(
        'description' => '作者',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => '创建时间.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      //请求值
      'keystandard' => array(
        'description' => '商品编码标准',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'keystr' => array(
        'description' => '商品编码内容',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'extinfo' => array(
        'description' => '由商户自定义传入， 建议仅使用 大小写字母、数字 母、数及-_().*_().* 这6个常用字符 。',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'qrcode_size' => array(
        'description' => '二维码的尺寸（ 整型 ），数值代表边长像素代表边长像素数，不填写默认值为 64 。',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 64,
      ),
      //返回值
      'pic_url' => array(
        'description' => '商品二维码的图片链接 ，可直接下载到本地 。',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'qrcode_url' => array(
        'description' => '商品二维码的内容，以 http://p.url.cn/为前缀 ，加上 pid 和 extinfo 三部分组成',
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'wechat_scan_product_qrcode_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );
  return $schema;
}

/**
 * Implements hook_update_N().
 * @todo 修改表结构 二维码扩展和url 可能很长  修改为  longtext 字段类型
 */
function wechat_scan_update_7101(&$sandbox) {
  $fields = [
    'extinfo' => array(
      'description' => '由商户自定义传入， 建议仅使用 大小写字母、数字 母、数及-_().*_().* 这6个常用字符 。',
      'type' => 'text',
      'size' => 'big',
      'not null' => FALSE,
    ),
    'qrcode_url' => array(
      'description' => '商品二维码的内容，以 http://p.url.cn/为前缀 ，加上 pid 和 extinfo 三部分组成',
      'type' => 'text',
      'size' => 'big',
      'not null' => FALSE,
    ),
  ];
  foreach ($fields as $name => $spec) {
    db_change_field('wechat_scan_product_qrcode', $name, $name, $spec);
  }
}

/**
 * Implements hook_update_N().
 */
function wechat_scan_update_7102(&$sandbox) {
  $field = array(
    'description' => '全部的商品数据序列化后的存储.',
    'type' => 'blob',
    'not null' => FALSE,
    'size' => 'big',
  );
  db_add_field('wechat_scan_product', 'data', $field);
  db_add_field('wechat_scan_product_revision', 'data', $field);
}